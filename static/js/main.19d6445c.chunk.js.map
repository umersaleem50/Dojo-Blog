{"version":3,"sources":["components/Navbar.jsx","components/BlogList.jsx","components/useFetch.jsx","components/Home.jsx","components/create.jsx","components/showblog.jsx","components/notFound.jsx","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","auther","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortContr","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","author","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","ShowBlog","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19d6445c.chunk.js","sourcesContent":["import './_Navbar.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h3 className=\"logo\">Dojo-Blog</h3>\r\n            <div className=\"navbar__links\">\r\n                <Link to=\"/\" className=\"navbar__link\">Home</Link>\r\n                <Link to=\"/create\" className=\"navbar__link\">Create Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({blogs, title}) => {\r\n    return ( \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n\r\n                    <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                    <h4 className=\"blog__heading\">{blog.title}</h4>\r\n                    <p className=\"blog__author\">Written by {blog.auther}</p>\r\n                    </Link>\r\n                    </div>\r\n                  \r\n                    //  <div className=\"blog-preview\" key={blog.id}>\r\n                    // <h4 className=\"blog__heading\">{blog.title}</h4>\r\n                    // <p className=\"blog__author\">Written by {blog.auther}</p>\r\n                    //  </div>\r\n                \r\n                ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","import { useState , useEffect } from \"react\";\r\nconst useFetch = (url) => {\r\n\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n   \r\n\r\n    useEffect(()=> {\r\n       const abortContr = new AbortController();\r\n        setTimeout(() => {\r\n          fetch(url , {signal : abortContr.signal})\r\n          .then((res) =>{ \r\n             if(!res.ok){\r\n                throw Error(`Could'nt able to fetch data from server!`)\r\n             }\r\n             return res.json()})\r\n          .then((data) => {\r\n             setData(data)\r\n             setIsPending(false)\r\n            })\r\n          .catch((err) => {\r\n            if(err.name === \"AbortError\"){\r\n               console.log(\"Fatch aborted\");\r\n            }\r\n            else{\r\n               setError(err.message);\r\n               setIsPending(false);\r\n            }\r\n          });\r\n         //  setIsPending(false);\r\n        }, 2000);\r\n\r\n        return () => abortContr.abort();\r\n     }, [url]);\r\n    return({data , isPending , error});\r\n}\r\n\r\nexport default useFetch;","\r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\nconst Home = () => {\r\n   const {data:blogs, isPending, error } = useFetch('https://umersaleem50.github.io/dojo-blog/db.json/blogs');\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n         {error && <p>{error}</p>}\r\n        {isPending && <div>Loading...</div>}\r\n        {blogs && <BlogList blogs={blogs} title =\"All Blogs\"/>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('bilal');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title: title , body: body , author: author};\r\n        setIsPending(true);\r\n        fetch('http://localhost:8080/blogs', {\r\n            method: 'POST',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            body: JSON.stringify(blog),\r\n        }).then(()=>{setIsPending(false)\r\n            history.push('/');\r\n        });\r\n        console.log('Blog create sucessfully');\r\n    }\r\n\r\n    return ( \r\n    <div>\r\n        <h2>Add a new Blog</h2>\r\n        <form onSubmit = {handleSubmit}>\r\n            <label>Blog title:</label>\r\n            <input \r\n            type=\"text\"\r\n            required\r\n            value={title}\r\n            onChange = {(e)=> setTitle(e.target.value)}\r\n            />\r\n            <label>body:</label>\r\n            <textarea \r\n            required\r\n            value = {body}\r\n            onChange = {(e) => setBody(e.target.value)}\r\n            >\r\n\r\n            </textarea>\r\n            <label>Select author:</label>\r\n            <select value = {author}\r\n            onChange = {(e) => setAuthor(e.target.value)}>\r\n                <option value=\"mario\">Mario</option>\r\n                <option value=\"bilal\">Bilal</option>\r\n            </select>\r\n            {!isPending && <button>Add Blog</button>}\r\n            {isPending && <button disabled>Adding Blog...</button>}\r\n        </form>\r\n        <p>{title}</p>\r\n        <p>{body}</p>\r\n        <p>{author}</p>\r\n    </div> );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst ShowBlog = () => {\r\n    const {id} = useParams();\r\n    const {data:blog, error ,isPending} = useFetch('http://localhost:8080/blogs/' + id);\r\n    const history = useHistory();\r\n    const handleDelete = () =>{\r\n        fetch('https://umersaleem50.github.io/dojo-blog/db.json/blogs'+ blog.id, {\r\n            method : 'DELETE'\r\n        })\r\n        .then(()=> {\r\n            history.push('/');\r\n        })\r\n    }\r\n    return ( \r\n        <article>\r\n            {isPending && <p>Loading...</p>}\r\n            {blog && <h3>{blog.title}</h3>}\r\n            {blog && <p>written by {blog.auther}</p>}\r\n            {blog && <p>{blog.body}</p>}\r\n            {error && <p>Failed to fatch data form server!</p>}\r\n            <button onClick ={handleDelete}>Delete</button>\r\n        </article>\r\n     );\r\n}\r\n \r\nexport default ShowBlog;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( <div>\r\n        <h3>Sorry</h3>\r\n        <p>Page not found</p>\r\n        <Link to=\"/\">Go back to Homepage</Link>\r\n    </div> );\r\n}\r\n \r\nexport default NotFound;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport './App.scss';\nimport Create from './components/create';\nimport ShowBlog from './components/showblog';\nimport NotFound from './components/notFound';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"content\">\n            <Switch>\n            <Route exact path =\"/\">\n              <Home />\n            </Route>\n            <Route path =\"/create\">\n              <Create />\n            </Route>\n            <Route path =\"/blogs/:id\">\n              <ShowBlog />\n            </Route>\n            <Route path =\"*\">\n              <NotFound/>\n            </Route>\n            </Switch>\n          </div>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}